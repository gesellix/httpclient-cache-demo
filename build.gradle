subprojects {
  apply plugin: 'java'

  group = 'de.gesellix'
  version = 'NONE'
  sourceCompatibility = 1.8

  repositories {
    mavenCentral()
  }
}

ext {
  testprojects = []
  mainClassByProject = [:]
}

project(':ektorp') {
//  testprojects << it
  mainClassByProject[it] = 'de.gesellix.httpclientcachedemo.EktorpDemo'
  dependencies {
    compile("org.apache.httpcomponents:httpclient-cache:4.3")
  }
}

project(':httpclient-cache-4-3') {
  testprojects << it
  mainClassByProject[it] = 'de.gesellix.httpclientcachedemo.Demo4x'
  dependencies {
    compile("org.apache.httpcomponents:httpclient-cache:4.3")
  }
}

project(':httpclient-cache-4-4') {
  testprojects << it
  mainClassByProject[it] = 'de.gesellix.httpclientcachedemo.Demo4x'
  dependencies {
    compile("org.apache.httpcomponents:httpclient-cache:4.4")
  }
}

project(':httpclient-cache-4-5') {
  testprojects << it
  mainClassByProject[it] = 'de.gesellix.httpclientcachedemo.Demo4x'
  dependencies {
    compile("org.apache.httpcomponents:httpclient-cache:4.5")
  }
}

project(':httpclient-cache-5-0') {
  testprojects << it
  mainClassByProject[it] = 'de.gesellix.httpclientcachedemo.Demo5x'
  dependencies {
    compile("org.apache.httpcomponents.client5:httpclient5-cache:5.0-beta1")
  }
}

configure(testprojects) { p ->
  dependencies {
    compile project(':common')
  }
  task performDemo(type: JavaExec) {
    def clientSourceSets = p.sourceSets
    classpath = clientSourceSets.main.runtimeClasspath + clientSourceSets.test.runtimeClasspath
    main = mainClassByProject[p]
  }
//  check.dependsOn performDemo
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.7'
  distributionType = Wrapper.DistributionType.ALL
}
